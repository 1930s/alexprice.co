// Document variables
@import url('https://fonts.googleapis.com/css?family=Inconsolata:400');
$base-font-family: "Inconsolata", serif;
$title-font-family: "Inconsolata", serif;
$base-font-size:   20px;
$base-font-weight: 400;
$small-font-size:  $base-font-size * 0.875;
$base-line-height: 1.5;
$spacing-unit:     24px;

$black:#070709;
$text-grey-bright: #F8F8F8;
$text-grey-light: #A3A3A3;
$text-grey-dark: #424242;

$cyan-light: #13C0FF;

$red-50: #FF3030;

// Width of the content area
$content-width:    800px;
$on-palm:          600px;
$on-laptop:        800px;



// Use media queries like this:
// @include media-query($on-palm) {
//     .wrapper {
//         padding-right: $spacing-unit / 2;
//         padding-left: $spacing-unit / 2;
//     }
// }
@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}

@mixin ease($ms) {
  -webkit-transition: all $ms cubic-bezier(0.420, 0.000, 0.580, 1.000);
  -moz-transition: all $ms cubic-bezier(0.420, 0.000, 0.580, 1.000);
  transition: all $ms cubic-bezier(0.420, 0.000, 0.580, 1.000);
}

@mixin delay($ms) {
  -webkit-transition-delay: $ms;
  -moz-transition-delay: $ms;
  transition-delay: $ms;
}

@mixin tiled($bg-color, $opacity) {
  background: $bg-color;
  @if $opacity != 1 {
    &:before {
      content: ' ';
      display: block;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      opacity: $opacity;
      background-repeat: repeat;
      background-size: 64px;
      @if $bg-color == $red-60 { background-image: url('../static/tile-alt.svg'); }
      @else { background-image: url('../static/tile.svg'); }
    }
  } @else {
    &:before { content: none; display: none; }
    @if $bg-color == $red-60 { background-image: url('../static/tile-alt.svg'); }
    @else { background-image: url('../static/tile.svg'); }
    background-repeat: repeat;
    background-size: 64px;
  }
}

@mixin animate($rules) {
  -webkit-animation: $rules;
  -moz-animation: $rules;
  -ms-animation: $rules;
  -o-animation: $rules;
  animation: $rules;
}

@mixin transition-delay($ms) {
    -webkit-transition-delay: $ms;
       -moz-transition-delay: $ms;
            transition-delay: $ms;
}

@mixin box-shadow($top, $left, $blur, $spread, $color) {
  -webkit-box-shadow: $top $left $blur $spread $color;
  -moz-box-shadow: $top $left $blur $spread $color;
  box-shadow: $top $left $blur $spread $color;
}

@mixin animation-delay($s) {
  -moz-animation-delay: $s;
  -webkit-animation-delay: $s;
  animation-delay: $s;
}

@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }

  // Output standard non-prefixed declaration
  #{$property}: $value;
}

@mixin keyframes($name) {
  @-moz-keyframes #{$name} { @content; }
  @-webkit-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

@mixin box-shadow($top, $left, $blur, $spread, $color) {
  -webkit-box-shadow: $top $left $blur $spread $color;
  -moz-box-shadow: $top $left $blur $spread $color;
  box-shadow: $top $left $blur $spread $color;
}

@mixin linear-gradient($start, $end, $angle){
    background: $start;
    background: -moz-linear-gradient($angle,$start, $end);
    background: -webkit-linear-gradient($angle,$start,$end);
    background: -o-linear-gradient($angle,$start,$end);
    background: -ms-linear-gradient($angle,$start,$end);
    background: linear-gradient($angle,$start,$end);
}

@mixin slanted-gradient($top, $bottom) {
  background: $top;
  background: -moz-linear-gradient(-90deg, $top 0%, $bottom 100%);
  background: -webkit-linear-gradient(-90deg, $top 0%, $bottom 100%);
  background: linear-gradient(-90deg, $top 0%, $bottom 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=1 );
}
